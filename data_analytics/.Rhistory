sentadilla_a20_completa <- read.csv("C:/Users/josei/OneDrive/Documentos/CIIBI proyectos/Analisys Free Squat/scripts/data_analytics/sentadilla_a20_completa.csv")
View(sentadilla_a20_completa)
datos = sentadilla_a20_completa
library(psych)
library(polycor)
library(ggcorrplot)
library(psych)
library(polycor)
library(ggcorrplot)
datos = sentadilla_a20_completa
#Paso 1. Obtener la matriz de correlacion policorica
mat_cor = hetcor(datos)$correlations
#Paso 1. Obtener la matriz de correlacion policorica
mat_cor = hetcor(datos)$correlations
View(datos)
datos = sentadilla_a20_completa[2:325]
#Paso 1. Obtener la matriz de correlacion policorica
mat_cor = hetcor(datos)$correlations
datos = sentadilla_a20_completa[2:325]
#Paso 1. Obtener la matriz de correlacion policorica
mat_cor = hetcor(datos)$correlations
ggcorrplot(mat_cor, type = "lower", hc.order = TRUE)
#KMO. Nos indica si la muestra es adecuada.
KMO(mat_cor)
View(sentadilla_a20_completa)
datos = sentadilla_a20_completa
datos = sentadilla_a20_completa
bad_ids = c()
for (id in datos$id){
num = id[6:7]
print(num)
}
for (id in datos$id){
num = id
print(num)
}
for (id in datos$id){
num = substr(id, 5,7)
print(num)
}
num = substr(id, 6,7)
for (id in datos$id){
num = substr(id, 6,7)
print(num)
}
for (id in datos$id){
num = substr(id, 7,7)
print(num)
}
for (id in datos$id){
print(id)
num = substr(id, 7,7)
print(num)
}
8*6*5
